<div class="modal fade" data-backdrop="static" data-keyboard="false" id="deleteConfirmationModal" tabindex="-1" role="dialog">
    <div class="modal-dialog  modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">تایید حذف</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="بستن"
                        @onclick="()=>OnConfirmationChange(false)">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                آیا مطمئن هستید که می‌خواهید حذف کنید؟
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal" @onclick="()=>OnConfirmationChange(false)">
                    لغو
                </button>

                @if (IsProcessStart)
                {
                    <button type="button" class="btn btn-danger"><i class="fa fa-spin fa-spinner"></i>در حال پردازش...</button>
                }
                else
                {
                    <button type="button" class="btn btn-danger" @onclick="()=>OnConfirmationChange(true)">
                        حذف
                    </button>
                }
            </div>
        </div>
    </div>
</div>

@code {
    public bool IsProcessStart { get; set; } = false;

    [Parameter]
    public EventCallback<bool> ConfirmationChanged { get; set; }

    [Parameter]
    public bool IsParentComponentProcessing { get; set; }

    protected override void OnParametersSet()
    {
        IsProcessStart = IsParentComponentProcessing;
    }

    protected async Task OnConfirmationChange(bool value)
    {
        if (value)
        {
            IsProcessStart = true;
        }
        await ConfirmationChanged.InvokeAsync(value);
    }
}
