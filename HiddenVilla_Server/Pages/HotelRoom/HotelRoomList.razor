@page "/hotel-room"
@using Models
@using Business.Repository.IRepository
@using HiddenVilla_Server.Service
@using HiddenVilla_Server.Service.IService
@inject IHotelRoomRepository HotelRoomRepository
@inject IJSRuntime JsRuntime
@inject HiddenVilla_Server.Service.IService.IFileUpload FileUpload
@inject NavigationManager NavigationManager
@inject ICityService CityService
@attribute [Authorize(Roles = Common.SD.Role_Admin)]
<div class="row mt-4">
    <div class="col-8">
        <h4 class="card-title text-info text-right">اتاق‌های هتل</h4>
    </div>
    <div class="col-3 offset-1">
        <NavLink href="hotel-room/create" class="btn btn-info form-control text-right">افزودن اتاق جدید</NavLink>
    </div>
</div>
<div class="row mt-4">
    <div class="col-12">
        <table class="table table-bordered table-hover text-right">
            <thead>
                <tr>
                    <th>نام</th>
                    <th>ظرفیت</th>
                    <th>نرخ</th>
                    <th>استان</th>
                    <th>مساحت (فوت مربع)</th>
                    <th>توضیحات</th>
                </tr>
            </thead>
            <tbody>
                @if (HotelRooms.Any())
                {
                    foreach (var room in HotelRooms)
                    {
                        <tr>
                            <td>@room.Name</td>
                            <td>@room.Occupancy</td>
                            <td>@room.RegularRate.ToString("c")</td>
                            <td>@room.CityName</td>
                            <td>@room.SqFt</td>
                            <td>@room.Details</td>
                            <td>
                                <NavLink href="@($"hotel-room/edit/{room.Id}")" class="btn btn-primary">ویرایش</NavLink>
                                <button class="btn btn-danger" @onclick="()=>HandleDelete(room.Id)">حذف</button>
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="5">هیچ رکوردی یافت نشد</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>


<DeleteConfirmation IsParentComponentProcessing="IsProcessing" ConfirmationChanged="ConfirmDelete_Click"></DeleteConfirmation>

@code {
    private IEnumerable<HotelRoomDTO> HotelRooms { get; set; } = new List<HotelRoomDTO>();
    private int? DeleteRoomId { get; set; } = null;
    private bool IsProcessing { get; set; } = false;
    protected override async Task OnInitializedAsync()
    {
        HotelRooms = await HotelRoomRepository.GetAllHotelRooms();
        foreach (var hotel in HotelRooms)
        {
            hotel.CityName = await CityService.GetCityName(hotel.CityHotelId);
        }
    }

    private async Task HandleDelete(int roomId)
    {
        DeleteRoomId = roomId;
        await JsRuntime.InvokeVoidAsync("ShowDeleteConfirmationModal");
    }

    public async Task ConfirmDelete_Click(bool isConfirmed)
    {
        IsProcessing = true;
        if (isConfirmed && DeleteRoomId != null)
        {
            HotelRoomDTO hotelRoom = await HotelRoomRepository.GetHotelRoom(DeleteRoomId.Value);
            foreach (var image in hotelRoom.HotelRoomImages)
            {
                var imageName = image.RoomImageUrl.Replace($"{NavigationManager.BaseUri}RoomImages/", "");
                FileUpload.DeleteFile(imageName);
            }

            await HotelRoomRepository.DeleteHotelRoom(DeleteRoomId.Value);
            await JsRuntime.ToastrSuccess("اتاق هتل با موفقیت حذف شد.");
            HotelRooms = await HotelRoomRepository.GetAllHotelRooms();
        }
        await JsRuntime.InvokeVoidAsync("HideDeleteConfirmationModal");
        IsProcessing = false;
    }
}
