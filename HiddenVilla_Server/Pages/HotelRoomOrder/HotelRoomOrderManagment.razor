@page "/hotel-room-order/details/{Id:int}"
@using Models
@using Business.Repository.IRepository
@inject IRoomOrderDetailsRepository roomOrderDetailsRepository
@using Common
<div class="container my-4">
    @if (IsLoading)
    {
        <div class="d-flex justify-content-center align-items-center">
            <div class="spinner-border text-primary" role="status"></div>
        </div>
    }
    else
    {
        <div class="row bg-dark text-right rounded-lg shadow-sm p-3 my-3">
            <!-- Title and Back Button -->
            <div class="col-12 d-flex justify-content-between align-items-center">
                <h2 class="text-info">جزئیات رزرو</h2>
                <a href="/hotel-room-order" class="btn btn-info">بازگشت به رزروها</a>
            </div>

            <!-- Carousel and Room Info -->
            <div class="col-12 col-lg-8 mt-4">
                <div class="card shadow-sm border-0">
                    <div class="card-header bg-success text-white">
                        اتاق انتخاب‌شده
                    </div>
                    <div class="card-body">
                        <div id="carouselExampleIndicators" class="carousel slide" data-ride="carousel">
                            <ol class="carousel-indicators">
                                @{
                                    int imageIndex = 0;
                                }
                                @foreach (var image in HotelBooking.HotelRoomDTO.HotelRoomImages)
                                {
                                    <li data-target="#carouselExampleIndicators" data-slide-to="@imageIndex" class="@((imageIndex == 0) ? "active" : "")"></li>
                                    imageIndex++;
                                }
                            </ol>
                            <div class="carousel-inner rounded-lg">
                                @{
                                    int innerImageIndex = 0;
                                }
                                @foreach (var image in HotelBooking.HotelRoomDTO.HotelRoomImages)
                                {
                                    <div class="carousel-item @((innerImageIndex == 0) ? "active" : "")">
                                        <img class="d-block w-100 rounded-lg" src="@image.RoomImageUrl" alt="Room image">
                                    </div>
                                    innerImageIndex++;
                                }
                            </div>
                            <a class="carousel-control-prev" href="#carouselExampleIndicators" role="button" data-slide="prev">
                                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                                <span class="sr-only">قبلی</span>
                            </a>
                            <a class="carousel-control-next" href="#carouselExampleIndicators" role="button" data-slide="next">
                                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                                <span class="sr-only">بعدی</span>
                            </a>
                        </div>

                        <!-- Room Details -->
                        <div class="mt-4 text-black-50">
                            <span class="d-block text-black-50">
                                حداکثر ظرفیت : @HotelBooking.HotelRoomDTO.Occupancy بزرگسالان
                            </span>
                            <span class="d-block text-black-50">
                                اندازه ویلا : @HotelBooking.HotelRoomDTO.SqFt فوت مربع
                            </span>
                            <span class="d-block text-black-50">
                                هزینه برای @HotelBooking.HotelRoomDTO.TotalDays شب
                            </span>
                            <h4 class="text-warning font-weight-bold mt-4">
                                دلار
                                <span style="border-bottom:1px solid #ff6a00">
                                    @HotelBooking.TotalCost.ToString("#,#.00#;(#,#.00#)")
                                </span>
                            </h4>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Booking Actions and Info -->
            <div class="col-12 col-lg-4 mt-4">
                <div class="card shadow-sm border-0">
                    <div class="card-header bg-success text-white">
                        وارد کردن جزئیات
                    </div>
                    <div class="card-body">
                        <!-- Booking Info -->
                        <div class="form-group">
                            <label class="text-warning">وضعیت رزرو</label>
                            <input @bind-value="HotelBooking.Status" type="text" class="form-control" disabled />
                        </div>
                        <div class="form-group">
                            <label class="text-warning">نام</label>
                            <input @bind-value="HotelBooking.Name" type="text" class="form-control" disabled />
                        </div>
                        <div class="form-group">
                            <label class="text-warning">تلفن</label>
                            <input @bind-value="HotelBooking.Phone" type="text" class="form-control" disabled />
                        </div>
                        <div class="form-group">
                            <label class="text-warning">ایمیل</label>
                            <input @bind-value="HotelBooking.Email" type="text" class="form-control" disabled />
                        </div>
                        <div class="form-group">
                            <label class="text-warning">تاریخ ورود</label>
                            <input type="text" value="@HotelBooking.CheckInDate.ToShortDateString()" class="form-control" disabled />
                        </div>
                        <div class="form-group">
                            <label class="text-warning">تاریخ خروج</label>
                            <input type="text" value="@HotelBooking.CheckOutDate.ToShortDateString()" class="form-control" disabled />
                        </div>
                        @if (HotelBooking.Status == SD.Status_Pending)
                        {
                            <button @onclick="CancelBooking" class="btn btn-danger mt-3 ml-2">لغو رزرو</button>
                        }
                        <!-- Action Buttons -->
                        @if (HotelBooking.Status == SD.Status_Pending)
                        {
                            <button @onclick="ConfirmCheckIn" class="btn btn-success mt-3">تایید ورود</button>
                        }
                        @if (HotelBooking.Status == SD.Status_CheckedIn)
                        {
                            <button @onclick="ConfirmCheckOut" class="btn btn-success mt-3">تایید خروج</button>
                        }
                    </div>
                </div>
            </div>
        </div>
    }
</div>


@code {
    [Parameter]
    public int Id { get; set; }

    private RoomOrderDetailsDTO HotelBooking { get; set; } = new RoomOrderDetailsDTO() { HotelRoomDTO = new HotelRoomDTO() };
    private bool IsLoading { get; set; } = false;

    protected override async Task OnInitializedAsync()
    {
        IsLoading = true;

        if (Id != 0)
        {
            HotelBooking = await roomOrderDetailsRepository.GetRoomOrderDetail(Id);
        }
        else
        {
            //error
        }

        IsLoading = false;
    }

    private async Task ConfirmCheckIn()
    {
        await roomOrderDetailsRepository.UpdateOrderStatus(HotelBooking.Id, SD.Status_CheckedIn);
        HotelBooking = await roomOrderDetailsRepository.GetRoomOrderDetail(Id);
    }

    private async Task ConfirmCheckOut()
    {
        await roomOrderDetailsRepository.UpdateOrderStatus(HotelBooking.Id, SD.Status_CheckedOut_Completed);
        HotelBooking = await roomOrderDetailsRepository.GetRoomOrderDetail(Id);
    }

    private async Task CancelBooking()
    {
        await roomOrderDetailsRepository.UpdateOrderStatus(HotelBooking.Id, SD.Status_Cancelled);
        HotelBooking = await roomOrderDetailsRepository.GetRoomOrderDetail(Id);
    }

    private async Task NoShowBooking()
    {
        await roomOrderDetailsRepository.UpdateOrderStatus(HotelBooking.Id, SD.Status_NoShow);
        HotelBooking = await roomOrderDetailsRepository.GetRoomOrderDetail(Id);
    }
}
